<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mapper.BoardMapper">

	<!-- sql 태그는 id라는 속성을 이용해서 필요한 경우에 동일한 sql의 일부를 재사용할수 있다 재사용과 수정이 용이하다 -->
	<sql id="criteria">
		<!-- () 설정과 맨 뒤에 AND 붙이고 맨앞에 생성되는 OR 지운다 -->
		<if test="typeArr !=null">
			<trim prefix="(" suffix=") AND" prefixOverrides="OR">
				<!-- getTypeArr() 결과인 문자열의 배열을 받아들인다 mybatis는 java beans 규칙을 따르지않고 get/set메서드만을 
					활용 -->
				<foreach item="type" collection="typeArr">
					<!-- 안쪽의 동적 sql or title... or content .... -->
					<trim prefix="OR">
						<choose>
							<when test="type == 'T'.toString()">
								title like '%'|| #{keyword}||'%'
							</when>
							<when test="type == 'C'.toString()">
								content like '%'|| #{keyword}||'%'
							</when>
							<when test="type == 'W'.toString()">
								writer like '%'|| #{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
	
	<sql id="boardList">
	<where>
		<if test="type == 'T'.toString()">
			title like '%'||#{keyword}||'%'
		</if>
		<if test="type == 'C'.toString()">
			content like '%'||#{keyword}||'%'
		</if>
	
		<if test="type == 'W'.toString()">
			write like '%'||#{keyword}||'%'
		</if>
		<if test="type == null">
		</if>
		</where>
	</sql>
	
		<sql id="board">
		
		<if test="type == 'T'.toString()">
			title like '%'||#{keyword}||'%'
		</if>
		<if test="type == 'C'.toString()">
			content like '%'||#{keyword}||'%'
		</if>
	
		<if test="type == 'W'.toString()">
			write like '%'||#{keyword}||'%'
		</if>
	
	</sql>
	
	

	
	
	<select id="get" resultType="com.test.domain.BoardVO">
			SELECT b.title
					,b.content
					,b.writer
					,b.updatedate
					,b.bno
					,a.UUID
					,a.filetype
					,a.fileName
					,a.uploadPath
			 FROM tb1_board b
				LEFT JOIN tb1_attach a ON b.bno = a.bno
				WHERE b.bno=#{bno}
	</select>
	
	<insert id="insert">
		insert into tb1_board (title,content,writer) values
		(#{title},#{content},#{writer})
	</insert>
	


	<select id="getListWithPaging" resultType="com.test.domain.BoardVO">
		select sub1.bno,sub1.title,sub1.content,sub1.writer,sub1.regdate,sub1.updatedate from
		(select * from tb1_board order by bno desc) sub1
		<include refid="boardList"></include>
		limit #{amount} OFFSET #{offset}
	</select>




	<!-- selectKey 어노테이션, pk값을 미리(before) sql을 통해서 처리후 결과 보관 자동으로 추가되는 PK값을 
		확인해하는 상환에서 유용 -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			select seq_board.nextval from dual
		</selectKey>
		insert into tb1_board (bno,title,content,writer) values
		(#{bno},#{title},#{content},#{writer})
	</insert>


	<delete id="delete">
		delete from tb1_board where bno=#{bno}
	</delete>


	<update id="modify">
		update tb1_board set title=#{title}, content=#{content}, writer=#{writer},
		updatedate=now() where bno=#{bno}
	</update>
	
	
	<select id="total" resultType="int">
		select count(*) from tb1_board 
	</select>






	<insert id="fileInsert">
	<selectKey keyProperty="bno" order="BEFORE" resultType="int">
		SELECT bno FROM tb1_board ORDER BY bno DESC LIMIT 1
	</selectKey>
		insert into tb1_attach (uuid,uploadPath,fileName,fileType,bno) 
		values (#{uuid},#{uploadPath},#{fileName},#{fileType},#{bno})
	</insert>
	
	<select id="findByBno" resultType="com.test.domain.BoardAttachVO">
	select * from tb1_attach where bno = #{bno}
	
	</select>







</mapper>